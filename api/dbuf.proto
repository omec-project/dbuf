// Copyright 2020-present Open Networking Foundation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

option go_package = "github.com/omec-project/dbuf/api";
option java_package = "org.omecproject.dbuf.grpc";

package dbuf;

service DbufService {
  rpc GetDbufState(GetDbufStateRequest) returns (GetDbufStateResponse);
  rpc GetQueueState(GetQueueStateRequest) returns (GetQueueStateResponse);
  rpc ModifyQueue(ModifyQueueRequest) returns (ModifyQueueResponse);
  rpc Subscribe(SubscribeRequest) returns (stream Notification);
}

message GetDbufStateRequest {}

message GetDbufStateResponse {
  uint64 maximum_queues = 1;
  uint64 allocated_queues = 2;
  uint64 empty_queues = 3;
  uint64 maximum_memory = 4;
  uint64 free_memory = 5;
}

message GetQueueStateRequest {
  uint64 queue_id = 1;
}

message GetQueueStateResponse {
  enum QueuesState {
    QUEUE_STATE_INVALID = 0;
    QUEUE_STATE_BUFFERING = 1;
    QUEUE_STATE_DRAINING = 2;
    QUEUE_STATE_PASSTHROUGH = 3;
  }
  uint64 maximum_buffers = 1;
  uint64 free_buffers = 2;
  uint64 maximum_memory = 3;
  uint64 free_memory = 4;
  QueuesState state = 5;
}

message ModifyQueueRequest {
  enum QueueAction {
    QUEUE_ACTION_INVALID = 0;
    QUEUE_ACTION_RELEASE = 1;
    QUEUE_ACTION_RELEASE_AND_PASSTHROUGH = 2;
    QUEUE_ACTION_DROP = 3;
    QUEUE_ACTION_RESIZE = 4;
  }
  QueueAction action = 1;
  uint64 queue_id = 2;
  uint64 new_queue_size = 3;
  string destination_address = 4;
}

message ModifyQueueResponse {}

message SubscribeRequest {}

message Notification {
  message Ready {}
  message FirstBuffer {
    uint32 new_buffer_id = 1;
  }
  message DroppedPacket {
    uint32 queue_id = 1;
  }
  oneof message_type {
    Ready ready = 1;
    FirstBuffer first_buffer = 2;
    DroppedPacket dropped_packet = 3;
  }
}